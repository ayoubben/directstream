.col-md-1
.col-md-8.well style=("border-radius: 5px;")
  = semantic_form_for @location do |f|
    = f.inputs  do
        
        = f.input :adress, as: :string,  :input_html => {  onClick: "initialize();", placeholder: "Indiquez un lieu" }
        = f.input :number,               :input_html => { :id => 'street_number' }
        = f.input :street,               :input_html => { :id => 'route' }
        = f.input :city,                 :input_html => { :id => 'locality' }
        = f.input :zip_code,             :input_html => { :id => 'postal_code' }
        = f.input :country, as: :string, :input_html => { :id => 'country' }

    = f.actions do
      = f.action :submit, as: :input
.col-md-3

javascript:

  var placeSearch, autocomplete;
  var componentForm = {
    street_number: 'short_name',
    route: 'long_name',
    locality: 'long_name',
    country: 'long_name',
    postal_code: 'short_name'
  };

  function initialize() {
    autocomplete = new google.maps.places.Autocomplete(
        (document.getElementById('location_adress')),
        { types: ['geocode'] });

    google.maps.event.addListener(autocomplete, 'place_changed', function() {
      fillInAddress();
    });
  }

  function fillInAddress() {
    var place = autocomplete.getPlace();

    for (var component in componentForm) {
      document.getElementById(component).value = '';
      document.getElementById(component).disabled = false;
    }

    for (var i = 0; i < place.address_components.length; i++) {
      var addressType = place.address_components[i].types[0];
      if (componentForm[addressType]) {
        var val = place.address_components[i][componentForm[addressType]];
        document.getElementById(addressType).value = val;
      }
    }
  }

  function geolocate() {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(function(position) {
        var geolocation = new google.maps.LatLng(
            position.coords.latitude, position.coords.longitude);
        var circle = new google.maps.Circle({
          center: geolocation,
          radius: position.coords.accuracy
        });
        autocomplete.setBounds(circle.getBounds());
      });
    }
  }
